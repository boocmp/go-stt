// Copyright 2012 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.0--rc2
// source: google_streaming_api.proto

// TODO(hans): Commented out due to compilation errors.
// option cc_api_version = 2;

package google_streaming_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpeechRecognitionEvent_StatusCode int32

const (
	// Note: in JavaScript API SpeechRecognitionError 0 is "OTHER" error.
	SpeechRecognitionEvent_STATUS_SUCCESS                SpeechRecognitionEvent_StatusCode = 0
	SpeechRecognitionEvent_STATUS_NO_SPEECH              SpeechRecognitionEvent_StatusCode = 1
	SpeechRecognitionEvent_STATUS_ABORTED                SpeechRecognitionEvent_StatusCode = 2
	SpeechRecognitionEvent_STATUS_AUDIO_CAPTURE          SpeechRecognitionEvent_StatusCode = 3
	SpeechRecognitionEvent_STATUS_NETWORK                SpeechRecognitionEvent_StatusCode = 4
	SpeechRecognitionEvent_STATUS_NOT_ALLOWED            SpeechRecognitionEvent_StatusCode = 5
	SpeechRecognitionEvent_STATUS_SERVICE_NOT_ALLOWED    SpeechRecognitionEvent_StatusCode = 6
	SpeechRecognitionEvent_STATUS_BAD_GRAMMAR            SpeechRecognitionEvent_StatusCode = 7
	SpeechRecognitionEvent_STATUS_LANGUAGE_NOT_SUPPORTED SpeechRecognitionEvent_StatusCode = 8
)

// Enum value maps for SpeechRecognitionEvent_StatusCode.
var (
	SpeechRecognitionEvent_StatusCode_name = map[int32]string{
		0: "STATUS_SUCCESS",
		1: "STATUS_NO_SPEECH",
		2: "STATUS_ABORTED",
		3: "STATUS_AUDIO_CAPTURE",
		4: "STATUS_NETWORK",
		5: "STATUS_NOT_ALLOWED",
		6: "STATUS_SERVICE_NOT_ALLOWED",
		7: "STATUS_BAD_GRAMMAR",
		8: "STATUS_LANGUAGE_NOT_SUPPORTED",
	}
	SpeechRecognitionEvent_StatusCode_value = map[string]int32{
		"STATUS_SUCCESS":                0,
		"STATUS_NO_SPEECH":              1,
		"STATUS_ABORTED":                2,
		"STATUS_AUDIO_CAPTURE":          3,
		"STATUS_NETWORK":                4,
		"STATUS_NOT_ALLOWED":            5,
		"STATUS_SERVICE_NOT_ALLOWED":    6,
		"STATUS_BAD_GRAMMAR":            7,
		"STATUS_LANGUAGE_NOT_SUPPORTED": 8,
	}
)

func (x SpeechRecognitionEvent_StatusCode) Enum() *SpeechRecognitionEvent_StatusCode {
	p := new(SpeechRecognitionEvent_StatusCode)
	*p = x
	return p
}

func (x SpeechRecognitionEvent_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpeechRecognitionEvent_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_google_streaming_api_proto_enumTypes[0].Descriptor()
}

func (SpeechRecognitionEvent_StatusCode) Type() protoreflect.EnumType {
	return &file_google_streaming_api_proto_enumTypes[0]
}

func (x SpeechRecognitionEvent_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SpeechRecognitionEvent_StatusCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SpeechRecognitionEvent_StatusCode(num)
	return nil
}

// Deprecated: Use SpeechRecognitionEvent_StatusCode.Descriptor instead.
func (SpeechRecognitionEvent_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_google_streaming_api_proto_rawDescGZIP(), []int{0, 0}
}

type SpeechRecognitionEvent_EndpointerEventType int32

const (
	SpeechRecognitionEvent_START_OF_SPEECH SpeechRecognitionEvent_EndpointerEventType = 0
	SpeechRecognitionEvent_END_OF_SPEECH   SpeechRecognitionEvent_EndpointerEventType = 1
	SpeechRecognitionEvent_END_OF_AUDIO    SpeechRecognitionEvent_EndpointerEventType = 2 // End of audio stream has been reached.
	// End of utterance indicates that no more speech segments are expected.
	SpeechRecognitionEvent_END_OF_UTTERANCE SpeechRecognitionEvent_EndpointerEventType = 3
)

// Enum value maps for SpeechRecognitionEvent_EndpointerEventType.
var (
	SpeechRecognitionEvent_EndpointerEventType_name = map[int32]string{
		0: "START_OF_SPEECH",
		1: "END_OF_SPEECH",
		2: "END_OF_AUDIO",
		3: "END_OF_UTTERANCE",
	}
	SpeechRecognitionEvent_EndpointerEventType_value = map[string]int32{
		"START_OF_SPEECH":  0,
		"END_OF_SPEECH":    1,
		"END_OF_AUDIO":     2,
		"END_OF_UTTERANCE": 3,
	}
)

func (x SpeechRecognitionEvent_EndpointerEventType) Enum() *SpeechRecognitionEvent_EndpointerEventType {
	p := new(SpeechRecognitionEvent_EndpointerEventType)
	*p = x
	return p
}

func (x SpeechRecognitionEvent_EndpointerEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpeechRecognitionEvent_EndpointerEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_google_streaming_api_proto_enumTypes[1].Descriptor()
}

func (SpeechRecognitionEvent_EndpointerEventType) Type() protoreflect.EnumType {
	return &file_google_streaming_api_proto_enumTypes[1]
}

func (x SpeechRecognitionEvent_EndpointerEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SpeechRecognitionEvent_EndpointerEventType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SpeechRecognitionEvent_EndpointerEventType(num)
	return nil
}

// Deprecated: Use SpeechRecognitionEvent_EndpointerEventType.Descriptor instead.
func (SpeechRecognitionEvent_EndpointerEventType) EnumDescriptor() ([]byte, []int) {
	return file_google_streaming_api_proto_rawDescGZIP(), []int{0, 1}
}

// SpeechRecognitionEvent is the only message type sent to client.
//
// The first SpeechRecognitionEvent is an empty (default) message to indicate
// as early as possible that the stream connection has been established.
type SpeechRecognitionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *SpeechRecognitionEvent_StatusCode `protobuf:"varint,1,opt,name=status,enum=content.proto.SpeechRecognitionEvent_StatusCode,def=0" json:"status,omitempty"`
	// May contain zero or one final=true result (the newly settled portion).
	// May also contain zero or more final=false results.
	// (Note that this differs from JavaScript API resultHistory in that no more
	// than one final=true result is returned, so client must accumulate
	// resultHistory by concatenating the final=true results.)
	Result   []*SpeechRecognitionResult                  `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
	Endpoint *SpeechRecognitionEvent_EndpointerEventType `protobuf:"varint,4,opt,name=endpoint,enum=content.proto.SpeechRecognitionEvent_EndpointerEventType" json:"endpoint,omitempty"`
}

// Default values for SpeechRecognitionEvent fields.
const (
	Default_SpeechRecognitionEvent_Status = SpeechRecognitionEvent_STATUS_SUCCESS
)

func (x *SpeechRecognitionEvent) Reset() {
	*x = SpeechRecognitionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_streaming_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpeechRecognitionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeechRecognitionEvent) ProtoMessage() {}

func (x *SpeechRecognitionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_google_streaming_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeechRecognitionEvent.ProtoReflect.Descriptor instead.
func (*SpeechRecognitionEvent) Descriptor() ([]byte, []int) {
	return file_google_streaming_api_proto_rawDescGZIP(), []int{0}
}

func (x *SpeechRecognitionEvent) GetStatus() SpeechRecognitionEvent_StatusCode {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_SpeechRecognitionEvent_Status
}

func (x *SpeechRecognitionEvent) GetResult() []*SpeechRecognitionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SpeechRecognitionEvent) GetEndpoint() SpeechRecognitionEvent_EndpointerEventType {
	if x != nil && x.Endpoint != nil {
		return *x.Endpoint
	}
	return SpeechRecognitionEvent_START_OF_SPEECH
}

type SpeechRecognitionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alternative []*SpeechRecognitionAlternative `protobuf:"bytes,1,rep,name=alternative" json:"alternative,omitempty"`
	// True if this is the final time the speech service will return this
	// particular SpeechRecognitionResult. If false, then this represents an
	// interim result that could still be changed.
	Final *bool `protobuf:"varint,2,opt,name=final,def=0" json:"final,omitempty"`
	// An estimate of the probability that the recognizer will not change its
	// guess about this interim result.  Values range from 0.0 (completely
	// unstable) to 1.0 (completely stable).  Note that this is not the same as
	// "confidence", which estimate the probability that a recognition result
	// is correct. This field is only provided for interim (final=false) results.
	Stability *float32 `protobuf:"fixed32,3,opt,name=stability" json:"stability,omitempty"`
}

// Default values for SpeechRecognitionResult fields.
const (
	Default_SpeechRecognitionResult_Final = bool(false)
)

func (x *SpeechRecognitionResult) Reset() {
	*x = SpeechRecognitionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_streaming_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpeechRecognitionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeechRecognitionResult) ProtoMessage() {}

func (x *SpeechRecognitionResult) ProtoReflect() protoreflect.Message {
	mi := &file_google_streaming_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeechRecognitionResult.ProtoReflect.Descriptor instead.
func (*SpeechRecognitionResult) Descriptor() ([]byte, []int) {
	return file_google_streaming_api_proto_rawDescGZIP(), []int{1}
}

func (x *SpeechRecognitionResult) GetAlternative() []*SpeechRecognitionAlternative {
	if x != nil {
		return x.Alternative
	}
	return nil
}

func (x *SpeechRecognitionResult) GetFinal() bool {
	if x != nil && x.Final != nil {
		return *x.Final
	}
	return Default_SpeechRecognitionResult_Final
}

func (x *SpeechRecognitionResult) GetStability() float32 {
	if x != nil && x.Stability != nil {
		return *x.Stability
	}
	return 0
}

// Item in N-best list.
type SpeechRecognitionAlternative struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Spoken text.
	Transcript *string `protobuf:"bytes,1,opt,name=transcript" json:"transcript,omitempty"`
	// The confidence estimate between 0.0 and 1.0.  A higher number means the
	// system is more confident that the recognition is correct.
	// This field is typically provided only for the top hypothesis and only for
	// final results.
	Confidence *float32 `protobuf:"fixed32,2,opt,name=confidence" json:"confidence,omitempty"`
}

func (x *SpeechRecognitionAlternative) Reset() {
	*x = SpeechRecognitionAlternative{}
	if protoimpl.UnsafeEnabled {
		mi := &file_google_streaming_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpeechRecognitionAlternative) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeechRecognitionAlternative) ProtoMessage() {}

func (x *SpeechRecognitionAlternative) ProtoReflect() protoreflect.Message {
	mi := &file_google_streaming_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeechRecognitionAlternative.ProtoReflect.Descriptor instead.
func (*SpeechRecognitionAlternative) Descriptor() ([]byte, []int) {
	return file_google_streaming_api_proto_rawDescGZIP(), []int{2}
}

func (x *SpeechRecognitionAlternative) GetTranscript() string {
	if x != nil && x.Transcript != nil {
		return *x.Transcript
	}
	return ""
}

func (x *SpeechRecognitionAlternative) GetConfidence() float32 {
	if x != nil && x.Confidence != nil {
		return *x.Confidence
	}
	return 0
}

var File_google_streaming_api_proto protoreflect.FileDescriptor

var file_google_streaming_api_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x04, 0x0a, 0x16,
	0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63,
	0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x3a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x55, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x39, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x43, 0x48, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41,
	0x55, 0x44, 0x49, 0x4f, 0x5f, 0x43, 0x41, 0x50, 0x54, 0x55, 0x52, 0x45, 0x10, 0x03, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b,
	0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x47, 0x52, 0x41, 0x4d, 0x4d, 0x41, 0x52,
	0x10, 0x07, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4c, 0x41, 0x4e,
	0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x08, 0x22, 0x65, 0x0a, 0x13, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x43, 0x48, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4e, 0x44, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x50, 0x45, 0x45,
	0x43, 0x48, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x4e, 0x44, 0x5f, 0x4f, 0x46, 0x5f, 0x41,
	0x55, 0x44, 0x49, 0x4f, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x4e, 0x44, 0x5f, 0x4f, 0x46,
	0x5f, 0x55, 0x54, 0x54, 0x45, 0x52, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x22, 0xa3, 0x01, 0x0a,
	0x17, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4d, 0x0a, 0x0b, 0x61, 0x6c, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70,
	0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0b, 0x61, 0x6c, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x05, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x22, 0x5e, 0x0a, 0x1c, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f,
	0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x0a, 0x48, 0x03, 0x5a, 0x06, 0x2e, 0x2f, 0x6d, 0x61, 0x69, 0x6e,
}

var (
	file_google_streaming_api_proto_rawDescOnce sync.Once
	file_google_streaming_api_proto_rawDescData = file_google_streaming_api_proto_rawDesc
)

func file_google_streaming_api_proto_rawDescGZIP() []byte {
	file_google_streaming_api_proto_rawDescOnce.Do(func() {
		file_google_streaming_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_streaming_api_proto_rawDescData)
	})
	return file_google_streaming_api_proto_rawDescData
}

var file_google_streaming_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_google_streaming_api_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_google_streaming_api_proto_goTypes = []interface{}{
	(SpeechRecognitionEvent_StatusCode)(0),          // 0: content.proto.SpeechRecognitionEvent.StatusCode
	(SpeechRecognitionEvent_EndpointerEventType)(0), // 1: content.proto.SpeechRecognitionEvent.EndpointerEventType
	(*SpeechRecognitionEvent)(nil),                  // 2: content.proto.SpeechRecognitionEvent
	(*SpeechRecognitionResult)(nil),                 // 3: content.proto.SpeechRecognitionResult
	(*SpeechRecognitionAlternative)(nil),            // 4: content.proto.SpeechRecognitionAlternative
}
var file_google_streaming_api_proto_depIdxs = []int32{
	0, // 0: content.proto.SpeechRecognitionEvent.status:type_name -> content.proto.SpeechRecognitionEvent.StatusCode
	3, // 1: content.proto.SpeechRecognitionEvent.result:type_name -> content.proto.SpeechRecognitionResult
	1, // 2: content.proto.SpeechRecognitionEvent.endpoint:type_name -> content.proto.SpeechRecognitionEvent.EndpointerEventType
	4, // 3: content.proto.SpeechRecognitionResult.alternative:type_name -> content.proto.SpeechRecognitionAlternative
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_google_streaming_api_proto_init() }
func file_google_streaming_api_proto_init() {
	if File_google_streaming_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_google_streaming_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpeechRecognitionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_streaming_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpeechRecognitionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_google_streaming_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpeechRecognitionAlternative); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_streaming_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_streaming_api_proto_goTypes,
		DependencyIndexes: file_google_streaming_api_proto_depIdxs,
		EnumInfos:         file_google_streaming_api_proto_enumTypes,
		MessageInfos:      file_google_streaming_api_proto_msgTypes,
	}.Build()
	File_google_streaming_api_proto = out.File
	file_google_streaming_api_proto_rawDesc = nil
	file_google_streaming_api_proto_goTypes = nil
	file_google_streaming_api_proto_depIdxs = nil
}
